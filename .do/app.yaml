name: agent-pm
region: nyc

# Databases
databases:
  - name: agentpm-db
    engine: PG
    version: "15"
    production: false

# Single service for both backend and frontend
services:
  - name: app
    github:
      repo: syatt-io/pm-dashboard
      branch: main
      deploy_on_push: true
    source_dir: /

    # Build both Python dependencies and React frontend
    build_command: pip install -r requirements.txt && curl -fsSL https://nodejs.org/dist/v18.19.0/node-v18.19.0-linux-x64.tar.xz -o node.tar.xz && tar -xf node.tar.xz && export PATH=$PWD/node-v18.19.0-linux-x64/bin:$PATH && pwd && ls -la && test -d frontend && echo "frontend directory exists" || echo "frontend directory missing" && ls -la frontend/ && cd frontend && npm install && npm run build && cd ..

    # Run Flask which will serve both API and React static files
    # Uses gunicorn_config.py to ensure scheduler runs in only ONE worker
    run_command: gunicorn -c gunicorn_config.py src.web_interface:app

    http_port: 8080
    instance_count: 1
    instance_size_slug: professional-xs

    envs:
      # Flask Configuration
      - key: FLASK_ENV
        value: production
      - key: BACKEND_PORT
        value: "8080"
      - key: WEB_BASE_URL
        value: "https://agent-pm-tsbbb.ondigitalocean.app"

      # Database (auto-configured by DigitalOcean)
      - key: DATABASE_URL
        value: ${agentpm-db.DATABASE_URL}

      # JWT Secret (generate with: openssl rand -hex 32)
      - key: JWT_SECRET_KEY
        type: SECRET

      # Google OAuth
      - key: GOOGLE_CLIENT_ID
        type: SECRET

      # React App Google Client ID (same value)
      - key: REACT_APP_GOOGLE_CLIENT_ID
        type: SECRET

      # Fireflies API (optional - now stored per-user)
      - key: FIREFLIES_API_KEY
        type: SECRET

      # OpenAI
      - key: OPENAI_API_KEY
        type: SECRET

      # Jira Configuration
      - key: JIRA_URL
        value: https://syatt.atlassian.net
      - key: JIRA_USERNAME
        value: mike.samimi@syatt.io
      - key: JIRA_API_TOKEN
        type: SECRET
      - key: JIRA_PROJECT_KEY
        value: PM

      # Slack (optional)
      - key: SLACK_BOT_TOKEN
        type: SECRET
      - key: SLACK_SIGNING_SECRET
        type: SECRET
      - key: SLACK_CHANNEL
        value: "#mikes-minion"

      # Tempo (optional)
      - key: TEMPO_API_TOKEN
        type: SECRET

      # GitHub App (for context search)
      - key: GITHUB_APP_ID
        type: SECRET
      - key: GITHUB_APP_PRIVATE_KEY
        type: SECRET
      - key: GITHUB_APP_INSTALLATION_ID
        type: SECRET
      - key: GITHUB_ORGANIZATION
        value: syatt-io

      # Pinecone Vector Database
      - key: PINECONE_API_KEY
        type: SECRET
      - key: PINECONE_ENVIRONMENT
        value: us-east-1-aws
      - key: PINECONE_INDEX_NAME
        value: agent-pm-context
      - key: PINECONE_DIMENSION
        value: "1536"
      - key: PINECONE_METRIC
        value: cosine

      # Notion
      - key: NOTION_API_KEY
        type: SECRET

      # Admin API Key (for backfill endpoints)
      - key: ADMIN_API_KEY
        type: SECRET

    health_check:
      http_path: /api/health
      initial_delay_seconds: 70
      period_seconds: 10
      timeout_seconds: 10
      success_threshold: 1
      failure_threshold: 3

  # Celery Worker - Background task processor
  - name: celery-worker
    github:
      repo: syatt-io/pm-dashboard
      branch: main
      deploy_on_push: true
    source_dir: /

    build_command: pip install -r requirements.txt

    run_command: celery -A src.tasks.celery_app worker --loglevel=info --concurrency=2

    instance_count: 1
    instance_size_slug: basic-xxs

    envs:
      # Database (PostgreSQL for result backend)
      - key: DATABASE_URL
        value: ${agentpm-db.DATABASE_URL}

      # GCP Pub/Sub (Celery broker)
      - key: GCP_PROJECT_ID
        value: syatt-io
      - key: GOOGLE_APPLICATION_CREDENTIALS_JSON
        type: SECRET

      # OpenAI
      - key: OPENAI_API_KEY
        type: SECRET

      # Jira Configuration
      - key: JIRA_URL
        value: https://syatt.atlassian.net
      - key: JIRA_USERNAME
        value: mike.samimi@syatt.io
      - key: JIRA_API_TOKEN
        type: SECRET

      # Slack
      - key: SLACK_BOT_TOKEN
        type: SECRET

      # Fireflies
      - key: FIREFLIES_API_KEY
        type: SECRET

      # Pinecone
      - key: PINECONE_API_KEY
        type: SECRET
      - key: PINECONE_ENVIRONMENT
        value: us-east-1-aws
      - key: PINECONE_INDEX_NAME
        value: agent-pm-context
      - key: PINECONE_DIMENSION
        value: "1536"
      - key: PINECONE_METRIC
        value: cosine

      # Notion
      - key: NOTION_API_KEY
        type: SECRET

  # Celery Beat - Task scheduler
  - name: celery-beat
    github:
      repo: syatt-io/pm-dashboard
      branch: main
      deploy_on_push: true
    source_dir: /

    build_command: pip install -r requirements.txt

    run_command: celery -A src.tasks.celery_app beat --loglevel=info

    instance_count: 1
    instance_size_slug: basic-xxs

    envs:
      # Database (PostgreSQL for result backend)
      - key: DATABASE_URL
        value: ${agentpm-db.DATABASE_URL}

      # GCP Pub/Sub (Celery broker)
      - key: GCP_PROJECT_ID
        value: syatt-io
      - key: GOOGLE_APPLICATION_CREDENTIALS_JSON
        type: SECRET
